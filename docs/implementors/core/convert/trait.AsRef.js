(function() {var implementors = {};
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"crossbeam_epoch/trait.Pointable.html\" title=\"trait crossbeam_epoch::Pointable\">Pointable</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;","synthetic":false,"types":["crossbeam_epoch::atomic::Owned"]}];
implementors["either"] = [{"text":"impl&lt;L, R, Target&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;Target&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;Target&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;Target&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]},{"text":"impl&lt;L, R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.str.html\">str</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.str.html\">str</a>&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]},{"text":"impl&lt;L, R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.63.0/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.63.0/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.63.0/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]},{"text":"impl&lt;L, R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.63.0/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.63.0/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.63.0/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]},{"text":"impl&lt;L, R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.63.0/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/1.63.0/std/ffi/type.CStr.html\" title=\"type std::ffi::CStr\">CStr</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/1.63.0/std/ffi/type.CStr.html\" title=\"type std::ffi::CStr\">CStr</a>&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]},{"text":"impl&lt;L, R, Target&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.slice.html\">[Target]</a>&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.slice.html\">[Target]</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.slice.html\">[Target]</a>&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]}];
implementors["nalgebra"] = [{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 1]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 7]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U7.html\" title=\"type nalgebra::base::dimension::U7\">U7</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U7.html\" title=\"type nalgebra::base::dimension::U7\">U7</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 8]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U8.html\" title=\"type nalgebra::base::dimension::U8\">U8</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U8.html\" title=\"type nalgebra::base::dimension::U8\">U8</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 9]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U9.html\" title=\"type nalgebra::base::dimension::U9\">U9</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U9.html\" title=\"type nalgebra::base::dimension::U9\">U9</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 10]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U10.html\" title=\"type nalgebra::base::dimension::U10\">U10</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U10.html\" title=\"type nalgebra::base::dimension::U10\">U10</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 11]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U11.html\" title=\"type nalgebra::base::dimension::U11\">U11</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U11.html\" title=\"type nalgebra::base::dimension::U11\">U11</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 12]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U12.html\" title=\"type nalgebra::base::dimension::U12\">U12</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U12.html\" title=\"type nalgebra::base::dimension::U12\">U12</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 13]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U13.html\" title=\"type nalgebra::base::dimension::U13\">U13</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U13.html\" title=\"type nalgebra::base::dimension::U13\">U13</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 14]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U14.html\" title=\"type nalgebra::base::dimension::U14\">U14</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U14.html\" title=\"type nalgebra::base::dimension::U14\">U14</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 15]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U15.html\" title=\"type nalgebra::base::dimension::U15\">U15</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U15.html\" title=\"type nalgebra::base::dimension::U15\">U15</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 16]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U16.html\" title=\"type nalgebra::base::dimension::U16\">U16</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U16.html\" title=\"type nalgebra::base::dimension::U16\">U16</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 7]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U7.html\" title=\"type nalgebra::base::dimension::U7\">U7</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U7.html\" title=\"type nalgebra::base::dimension::U7\">U7</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 8]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U8.html\" title=\"type nalgebra::base::dimension::U8\">U8</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U8.html\" title=\"type nalgebra::base::dimension::U8\">U8</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 9]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U9.html\" title=\"type nalgebra::base::dimension::U9\">U9</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U9.html\" title=\"type nalgebra::base::dimension::U9\">U9</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 10]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U10.html\" title=\"type nalgebra::base::dimension::U10\">U10</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U10.html\" title=\"type nalgebra::base::dimension::U10\">U10</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 11]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U11.html\" title=\"type nalgebra::base::dimension::U11\">U11</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U11.html\" title=\"type nalgebra::base::dimension::U11\">U11</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 12]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U12.html\" title=\"type nalgebra::base::dimension::U12\">U12</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U12.html\" title=\"type nalgebra::base::dimension::U12\">U12</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 13]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U13.html\" title=\"type nalgebra::base::dimension::U13\">U13</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U13.html\" title=\"type nalgebra::base::dimension::U13\">U13</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 14]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U14.html\" title=\"type nalgebra::base::dimension::U14\">U14</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U14.html\" title=\"type nalgebra::base::dimension::U14\">U14</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 15]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U15.html\" title=\"type nalgebra::base::dimension::U15\">U15</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U15.html\" title=\"type nalgebra::base::dimension::U15\">U15</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 16]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U16.html\" title=\"type nalgebra::base::dimension::U16\">U16</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U16.html\" title=\"type nalgebra::base::dimension::U16\">U16</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 2]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U2.html\" title=\"type nalgebra::base::dimension::U2\">U2</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 3]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U3.html\" title=\"type nalgebra::base::dimension::U3\">U3</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 4]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U4.html\" title=\"type nalgebra::base::dimension::U4\">U4</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 5]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U5.html\" title=\"type nalgebra::base::dimension::U5\">U5</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 6]</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U6.html\" title=\"type nalgebra::base::dimension::U6\">U6</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a>,&nbsp;</span>","synthetic":false,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;T&gt;","synthetic":false,"types":["nalgebra::base::unit::Unit"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.63.0/std/primitive.array.html\">; 8]</a>&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::DualQuaternion\">DualQuaternion</a>&lt;T&gt;","synthetic":false,"types":["nalgebra::geometry::dual_quaternion::DualQuaternion"]}];
implementors["ndarray"] = [{"text":"impl&lt;T, Din, Dout&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"enum\" href=\"ndarray/enum.SliceInfoElem.html\" title=\"enum ndarray::SliceInfoElem\">SliceInfoElem</a>]&gt; for <a class=\"struct\" href=\"ndarray/struct.SliceInfo.html\" title=\"struct ndarray::SliceInfo\">SliceInfo</a>&lt;T, Din, Dout&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"enum\" href=\"ndarray/enum.SliceInfoElem.html\" title=\"enum ndarray::SliceInfoElem\">SliceInfoElem</a>]&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Din: <a class=\"trait\" href=\"ndarray/trait.Dimension.html\" title=\"trait ndarray::Dimension\">Dimension</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Dout: <a class=\"trait\" href=\"ndarray/trait.Dimension.html\" title=\"trait ndarray::Dimension\">Dimension</a>,&nbsp;</span>","synthetic":false,"types":["ndarray::slice::SliceInfo"]}];
implementors["noisy_float"] = [{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>, C:&nbsp;<a class=\"trait\" href=\"noisy_float/trait.FloatChecker.html\" title=\"trait noisy_float::FloatChecker\">FloatChecker</a>&lt;F&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;F&gt; for <a class=\"struct\" href=\"noisy_float/struct.NoisyFloat.html\" title=\"struct noisy_float::NoisyFloat\">NoisyFloat</a>&lt;F, C&gt;","synthetic":false,"types":["noisy_float::NoisyFloat"]}];
implementors["palette"] = [{"text":"impl&lt;C, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"palette/encoding/pixel/trait.Pixel.html\" title=\"trait palette::encoding::pixel::Pixel\">Pixel</a>&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/float/trait.Float.html\" title=\"trait palette::float::Float\">Float</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::blend::pre_alpha::PreAlpha"]},{"text":"impl&lt;C, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"palette/encoding/pixel/trait.Pixel.html\" title=\"trait palette::encoding::pixel::Pixel\">Pixel</a>&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::alpha::alpha::Alpha"]},{"text":"impl&lt;S, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::hsl::Hsl"]},{"text":"impl&lt;Wp, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::hsluv::Hsluv"]},{"text":"impl&lt;S, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::hsv::Hsv"]},{"text":"impl&lt;S, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::hwb::Hwb"]},{"text":"impl&lt;Wp, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::lab::Lab"]},{"text":"impl&lt;Wp, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::lch::Lch"]},{"text":"impl&lt;Wp, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::lchuv::Lchuv"]},{"text":"impl&lt;S, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::luma::luma::Luma"]},{"text":"impl&lt;Wp, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::luv::Luv"]},{"text":"impl&lt;T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::oklab::Oklab"]},{"text":"impl&lt;T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::oklch::Oklch"]},{"text":"impl&lt;S, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::rgb::rgb::Rgb"]},{"text":"impl&lt;Wp, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::xyz::Xyz"]},{"text":"impl&lt;Wp, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,&nbsp;</span>","synthetic":false,"types":["palette::yxy::Yxy"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()