(function() {var implementors = {};
implementors["noisy_float"] = [{"text":"impl&lt;F:&nbsp;Float + FromPrimitive, C:&nbsp;FloatChecker&lt;F&gt;&gt; FromPrimitive for NoisyFloat&lt;F, C&gt;","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T:&nbsp;FromPrimitive + Num&gt; FromPrimitive for Complex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl FromPrimitive for Ratio&lt;i8&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;i16&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;i32&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;i64&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;i128&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;isize&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;u8&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;u16&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;u32&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;u64&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;u128&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;usize&gt;","synthetic":false,"types":[]}];
implementors["num_traits"] = [];
implementors["simba"] = [{"text":"impl FromPrimitive for AutoSimd&lt;[f32; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[f32; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[f32; 8]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[f32; 16]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[f64; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[f64; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[f64; 8]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i128; 1]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i128; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i128; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i16; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i16; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i16; 8]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i16; 16]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i16; 32]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i32; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i32; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i32; 8]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i32; 16]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i64; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i64; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i64; 8]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i8; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i8; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i8; 8]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i8; 16]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[i8; 32]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[isize; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[isize; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[isize; 8]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u128; 1]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u128; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u128; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u16; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u16; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u16; 8]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u16; 16]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u16; 32]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u32; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u32; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u32; 8]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u32; 16]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u64; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u64; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u64; 8]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u8; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u8; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u8; 8]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u8; 16]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[u8; 32]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[usize; 2]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[usize; 4]&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for AutoSimd&lt;[usize; 8]&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()