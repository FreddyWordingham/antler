initSidebarItems({"enum":[["Alignment","Defines the alignment for padding operations."],["Attribute","A terminal style attribute."],["Color","A terminal color."],["Key","Key mapping"],["TermFamily","The family of the terminal."],["TermTarget","Where the term is writing."]],"fn":[["colors_enabled","Returns `true` if colors should be enabled for stdout."],["colors_enabled_stderr","Returns `true` if colors should be enabled for stderr."],["measure_text_width","Measure the width of a string in terminal characters."],["pad_str","Pads a string to fill a certain number of characters."],["set_colors_enabled","Forces colorization on or off for stdout."],["set_colors_enabled_stderr","Forces colorization on or off for stderr."],["strip_ansi_codes","Helper function to strip ansi codes."],["style","Wraps an object for formatting for styling."],["truncate_str","Truncates a string to a certain number of characters."],["user_attended","A fast way to check if the application has a user attended for stdout."],["user_attended_stderr","A fast way to check if the application has a user attended for stderr."]],"struct":[["AnsiCodeIterator","An iterator over ansi codes in a string."],["Emoji","\"Intelligent\" emoji formatter."],["Style","A stored style that can be applied."],["StyledObject","A formatting wrapper that can be styled for a terminal."],["Term","Abstraction around a terminal."],["TermFeatures","Gives access to the terminal features."]]});