initSidebarItems({"trait":[["ClosedAdd","Trait alias for `Add` and `AddAssign` with result of type `Self`."],["ClosedDiv","Trait alias for `Div` and `DivAssign` with result of type `Self`."],["ClosedMul","Trait alias for `Mul` and `MulAssign` with result of type `Self`."],["ClosedNeg","Trait alias for `Neg` with result of type `Self`."],["ClosedSub","Trait alias for `Sub` and `SubAssign` with result of type `Self`."],["ComplexField","Trait shared by all complex fields and its subfields (like real numbers)."],["Field","Trait implemented by fields, i.e., complex numbers and floats."],["RealField","Trait shared by all reals."],["SubsetOf","Nested sets and conversions between them (using an injective mapping). Useful to work with substructures. In generic code, it is preferable to use `SupersetOf` as trait bound whenever possible instead of `SubsetOf` (because SupersetOf is automatically implemented whenever `SubsetOf` is)."],["SupersetOf","Nested sets and conversions between them. Useful to work with substructures. It is preferable to implement the `SubsetOf` trait instead of `SupersetOf` whenever possible (because `SupersetOf` is automatically implemented whenever `SubsetOf` is)."]]});